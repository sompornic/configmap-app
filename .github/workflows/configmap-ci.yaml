name: Trigger Helm Update Workflow

on:
  push:
    branches:
      - main  # ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ push ‡πÑ‡∏õ‡∏¢‡∏±‡∏á branch main

jobs:
  update-helm-configmap:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout configmap-app repository
        uses: actions/checkout@v3

      - name: Read configmap.json
        id: read_config
        run: |
          ls -lrt
          CONFIG_JSON=$(cat config-app/configmap.json | jq -c .)
          echo "CONFIG_JSON=$CONFIG_JSON" >> $GITHUB_ENV

      - name: Update Helm values.yaml via GitHub API
        env:
          GH_TOKEN: ${{ secrets.PAT_TOKEN }}   # ‡πÉ‡∏ä‡πâ PAT Token ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå push
          REPO_OWNER: "sompornic"   # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô owner ‡∏Ç‡∏≠‡∏á repo ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
          REPO_NAME: "helm-app"  # ‡∏ä‡∏∑‡πà‡∏≠ repo ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢
          FILE_PATH: "app1/values.yaml" # ‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
          BRANCH: "main"  # Branch ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ push
          CONFIG_PAYLOAD: ${{ env.CONFIG_JSON }}  # ‡∏Ñ‡πà‡∏≤ JSON ‡∏ó‡∏µ‡πà‡∏≠‡πà‡∏≤‡∏ô‡∏°‡∏≤
        run: |
          echo "Fetching current values.yaml from GitHub API"

          # üîç ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å GitHub API
          RESPONSE=$(curl -s -H "Authorization: token $GH_TOKEN" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH")

          # üìå ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ SHA ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô
          FILE_SHA=$(echo "$RESPONSE" | jq -r '.sha')

          # üìå ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ content ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏•‡πâ‡∏ß decode base64
          FILE_CONTENT=$(echo "$RESPONSE" | jq -r '.content' | base64 -d)

          # üî• ‡πÅ‡∏õ‡∏•‡∏á JSON ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô YAML String Format
          CONFIG_YAML=$(echo "$CONFIG_PAYLOAD" | jq -c . | sed 's/"/\\"/g' | sed ':a;N;$!ba;s/\n/\\n/g')

          # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ config_payload ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô Multi-line String
          UPDATED_CONTENT=$(echo "$FILE_CONTENT" | sed "s|config_payload:.*|config_payload: |\\n  \"$CONFIG_YAML\"|")

          # üî• Debug ‡∏î‡∏π‡∏Ñ‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå YAML ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
          echo "Updated values.yaml:"
          echo "$UPDATED_CONTENT"

          # Encode ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô Base64
          ENCODED_CONTENT=$(echo "$UPDATED_CONTENT" | base64 -w 0)

          # ‡∏™‡∏£‡πâ‡∏≤‡∏á JSON Payload ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö GitHub API
          PAYLOAD=$(jq -n \
            --arg path "$FILE_PATH" \
            --arg message "Update config_payload in values.yaml" \
            --arg content "$ENCODED_CONTENT" \
            --arg sha "$FILE_SHA" \
            '{ path: $path, message: $message, content: $content, sha: $sha }')

          # üî• Debug ‡∏î‡∏π Payload ‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ
          echo "Payload to GitHub API:"
          echo "$PAYLOAD"

          # ‡∏™‡πà‡∏á API Request ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô GitHub
          curl -X PUT -H "Authorization: token $GH_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$PAYLOAD" \
            "https://api.github.com/repos/$REPO_OWNER/$REPO_NAME/contents/$FILE_PATH"

          echo "‚úÖ Updated values.yaml successfully"